
{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "workflows_ident_name": {
            "defaultValue": "ident",
            "type": "string"
        },
        "connections_azureblob_name": {
            "defaultValue": "azureblob",
            "type": "string"
        },
        "connections_videoindexer_name": {
            "defaultValue": "videoindexer",
            "type": "string"
        },
        "storageAccountName": {
            "type": "string"
        },
        "functionAppName":{
            "type": "string",
           "metadata": {
             "description": "Name for Function Apps"
           } 
         },
         "custom_vision_url":{
             "type": "string",
             "metadata": {
                "description": "Custom Vision URL"
              }
         },
         "custom_vision_key":{
             "type": "securestring",
             "metadata": {
                "description": "Custom Vision key"
              } 
         },
         "video_indexer_id":{
             "type": "string",
             "metadata": {
                "description": "Video Indexer Id"
              } 
         },
         "video_indexer_key":{
            "type": "securestring",
            "metadata": {
               "description": "Video Indexer Key"
             } 
        },
         "video_indexer_url":{
             "type": "string",
             "defaultValue": "https://api.videoindexer.ai",
             "metadata": {
                "description": "Video Indexer URL"
              } 
         },
         "video_indexer_region":{
             "type": "string",
             "defaultValue": "trial",
             "metadata": {
                "description": "Video Indexer Region"
              } 
         }
    },
    "variables": {
        "hostingPlanName" : "[uniqueString(subscription().subscriptionId)]", 
        "storageAccountid": "[concat(resourceGroup().id,'/providers/','Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
        "snippet":"/Videos/@{body('HTTP_UPLOAD_VIDEO')['id']}/Index?accessToken=@{body('HTTP_GET_VI_AUTH')}",
        "snippet1":"/Videos?accessToken=@{body('HTTP_GET_VI_AUTH')}&name=@{triggerBody()?['Name']}&videoUrl=@{encodeUriComponent(body('Create_SAS_URI_by_path')?['WebUrl'])}",
        "viurl":"[concat('https://api.videoindexer.ai/', parameters('video_indexer_region'), '/Accounts/', parameters('video_indexer_id'))]",
        "viauthurl":"[concat('https://api.videoindexer.ai/auth/', parameters('video_indexer_region'), '/Accounts/', parameters('video_indexer_id'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "name": "[parameters('workflows_ident_name')]",
            "apiVersion": "2017-07-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "When_a_blob_is_added_or_modified_(properties_only)": {
                            "recurrence": {
                                "frequency": "Minute",
                                "interval": 1
                            },
                            "splitOn": "@triggerBody()",
                            "metadata": {
                                "JTJmcmF3": "/raw"
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "get",
                                "path": "/datasets/default/triggers/batch/onupdatedfile",
                                "queries": {
                                    "folderId": "JTJmcmF3",
                                    "maxFileCount": 10
                                }
                            }
                        }
                    },
                    "actions": {
                        "Create_SAS_URI_by_path": {
                            "runAfter": {},
                            "type": "ApiConnection",
                            "inputs": {
                                "body": {
                                    "Permissions": "Read"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/CreateSharedLinkByPath",
                                "queries": {
                                    "path": "@triggerBody()?['Path']"
                                }
                            }
                        },
                        "Create_blob": {
                            "runAfter": {
                                "HTTP_GETADDTLFRAMES": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ApiConnection",
                            "inputs": {
                                "body": "@body('HTTP_GETADDTLFRAMES')",
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['azureblob']['connectionId']"
                                    }
                                },
                                "method": "post",
                                "path": "/datasets/default/files",
                                "queries": {
                                    "folderPath": "/results",
                                    "name": "@{triggerBody()?['Name']}.json",
                                    "queryParametersSingleEncoded": true
                                }
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "HTTP_GETBRANDPOSITION": {
                            "runAfter": {
                                "HTTP_DOWNLOAD_VIDEO": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "method": "GET",
                                "uri": "[concat('https://', 'replaceme')]"
                            }
                        },
                        "Delay": {
                            "inputs": {
                                "interval": {
                                    "count": 30,
                                    "unit": "Second"
                                }
                            },
                            "runAfter": {
                                "HTTP_UPLOAD_VIDEO": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Wait"
                        },
                        "HTTP_DOWNLOAD_VIDEO": {
                            "runAfter": {
                                "Until": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": "@body('Create_SAS_URI_by_path')?['WebUrl']",
                                "method": "POST",
                                "uri": "[concat('https://', 'replaceme')]"
                            }
                        },
                        "HTTP_GETADDTLFRAMES": {
                            "runAfter": {
                                "HTTP_GETBRANDPOSITION": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http",
                            "inputs": {
                                "body": "@body('HTTP_GETBRANDPOSITION')",
                                "method": "POST",
                                "uri": "[concat('https://', 'replaceme')]"
                            }
                        },
                        "Until": {
                            "actions": {
                                "HTTP_GET_VIDEO_STATE": {
                                    "inputs": {
                                        "method": "GET",
                                        "uri": "[concat(variables('viurl'), variables('snippet'))]"
                                    },
                                    "runAfter": {},
                                    "type": "Http"
                                }
                            },
                            "expression": "@equals(body('HTTP_GET_VIDEO_STATE')['state'], 'Processed')",
                            "limit": {
                                "count": 60,
                                "timeout": "PT1H"
                            },
                            "runAfter": {
                                "Delay": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Until"
                        },
                        "HTTP_GET_VI_AUTH": {
                            "inputs": {
                                "headers": {
                                    "Ocp-Apim-Subscription-Key": "[parameters('video_indexer_key')]"
                                },
                                "method": "GET",
                                "uri": "[concat(variables('viauthurl'), '/AccessToken?allowEdit=true')]"
                            },
                            "runAfter": {
                                "Create_SAS_URI_by_path": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        },
                        "HTTP_UPLOAD_VIDEO": {
                            "inputs": {
                                "method": "POST",
                                "uri": "[concat(variables('viurl'), variables('snippet1'))]"
                            },
                            "runAfter": {
                                "HTTP_GET_VI_AUTH": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Http"
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azureblob": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]",
                                "connectionName": "azureblob",
                                "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', 'azureblob')]"
                            }
                        }
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', parameters('connections_azureblob_name'))]"
            ]
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccountName')]",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "scale": null,
            "properties": {   
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Web/connections",
            "name": "[parameters('connections_azureblob_name')]",
            "apiVersion": "2016-06-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "displayName": "storage",
                "customParameterValues": {},
                "parameterValues": {
                    "accountName": "[parameters('storageAccountName')]",
                    "accessKey": "[listKeys(variables('storageAccountid'),'2015-05-01-preview').key1]"
                  },
                "api": {
                    "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/', parameters('connections_azureblob_name'))]"
                }
            },
            
            "dependsOn": []
        },
        {
            "apiVersion": "2015-08-01",
            "type": "Microsoft.Web/sites",
            "name": "[parameters('functionAppName')]",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",            
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
                "siteConfig": {
                    "appSettings": [
                        
                        {
                            "name": "customVizURL",
                            "value": "[parameters('custom_vision_url')]"
                        },
                        {
                            "name": "predictionKey",
                            "value": "[parameters('custom_vision_key')]"
                        },
                        {
                            "name": "storageConnectionString",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                        },
                        {
                            "name": "viAccountID",
                            "value": "[parameters('video_indexer_id')]"
                        },
                        {
                            "name": "viAPIKey",
                            "value": "[parameters('video_indexer_key')]"
                        },
                        {
                            "name": "viApiUrl",
                            "value": "[parameters('video_indexer_url')]"
                        },
                        {
                            "name": "viRegion",
                            "value": "[parameters('video_indexer_region')]"
                        },{
                            "name":"frameRefineFuncURL",
                            "value":"[concat('https://', parameters('functionAppName'), '.azurewebsites.net/api/GetAdditionalFrames')]"
                        },
                        {
                            "name": "downloadPath",
                            "value": "D:\\home\\site\\wwwroot"
                        },
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                          },
                          {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                          },
                          {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~2"
                          },
                          {
                            "name": "WEBSITE_NODE_DEFAULT_VERSION",
                            "value": "6.5.0"
                          },
                          {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2015-05-01-preview').key1)]"
                          },
                          {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[toLower(parameters('functionAppName'))]"
                          }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2015-04-01",
            "name": "[variables('hostingPlanName')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[variables('hostingPlanName')]",
                "computeMode": "Dynamic",
                "sku": "Dynamic"
            }
        }
    ]
}                
